NAME logic-unit-slice

INPUTSTART 
    BIT a
    BIT b

    #! selection inputs [ m0, m1 ] !#
    BIT m0
    BIT m1
    BIT inv
INPUTEND

OUTPUTSTART
    BIT y
OUTPUTEND

#! added signals as part of the logic generation !#
SIGNALSTART
    BIT sig_and
    BIT sig_or
    BIT sig_xor
    BIT sig_not

    BIT mux_and
    BIT mux_or
    BIT mux_xor
    BIT mux_not

SIGNALEND

LOGICSTART

    #! this targets signals, not outputs !#
    INFIX sig_and <= a * b END
    INFIX sig_or  <= a + b END
    INFIX sig_xor <= a ^ b END
    INFIX sig_not <= ! a END #! b input is completely ignored !#

    INFIX mux_and <= sig_and * ! m0 * ! m1 END
    INFIX mux_or  <= sig_or  * m0   * ! m1 END
    INFIX mux_xor <= sig_xor * ! m0 * m1 END
    INFIX mux_not <= sig_not * m0   * m1 END

    INFIX y <= ( mux_and + mux_or ) + ( mux_xor + mux_not ) ^ inv END

    #!
        postfix for logical negation
        RPN o_nand <= a b * ! END
    !#

LOGICEND

<root>

    <import name="alu-util"/>

    <module name="half-adder">

        <gate type="XOR" name="xor1"/>
        <gate type="AND" name="and1"/>

        <!-- inputs can go to multiple destinations -->
        <input name="A" to="and1.A:xor1.A"/>
        <input name="B" to="and1.B:xor1.B"/>

        <!-- outputs can only have one source -->
        <output name="SUM"   from="xor1"/>
        <output name="CARRY" from="and1"/>

    </module>

    <module name="full-adder">

        <!-- instance is always a predefined module -->
        <instance type="half-adder" name="lower-adder"/>
        <instance type="half-adder" name="upper-adder"/>
        <gate     type="OR"         name="carry-or"/>

        <!-- signals must have only one source but can go to multiple dest -->
        <signal from="lower-adder.SUM"  to="upper-adder.B"/>
        
        <!-- collect all of the carry signals -->
        <signal from="lower-adder.CARRY" to="carry-or.B"/>
        <signal from="upper-adder.CARRY" to="carry-or.A"/>

        <input name="CARRY-IN" to="upper-adder.A"/>
        <input name="A"        to="lower-adder.A"/>
        <input name="B"        to="lower-adder.B"/>

        <output name="SUM"       from="upper-adder.SUM"/>
        <output name="CARRY-OUT" from="carry-or"/>

    </module>

    <module name="full-arithmetic">
        <instance type="full-adder" name="adder"/>

        <gate type="XOR" name="invert-A"/>
        <gate type="XOR" name="invert-B"/>
        <gate type="XOR" name="invert-sum"/>

        <signal from="invert-A"  to="adder.A"/>
        <signal from="invert-B"  to="adder.B"/>
        <signal from="adder.SUM" to="invert-sum.A"/>

        <!-- inputs to invert various inputs and outputs -->
        <input name="INVERT-SUM" to="invert-sum.B"/>
        <input name="INVERT-A"   to="invert-A.B"/>
        <input name="INVERT-B"   to="invert-B.B"/>

        <!-- data going through the arithmetic unit -->
        <input name="A"        to="invert-A.A"/>
        <input name="B"        to="invert-B.A"/>
        <input name="CARRY-IN" to="adder.CARRY-IN"/>

        <output name="CARRY-OUT" from="adder.CARRY-OUT"/>
        <output name="SUM"       from="adder.SUM"/>

    </module>

    <module name="4-bit-arithmetic-unit">

        <!-- multiple instances of the same type of entity -->
        <instance type="full-arithmetic" name="bit0"/>
        <instance type="full-arithmetic" name="bit1"/>
        <instance type="full-arithmetic" name="bit2"/>
        <instance type="full-arithmetic" name="bit3"/>
        
        <!-- set all of those pesky carry bits -->
        <signal from="bit0.CARRY-OUT" to="bit1.CARRY-IN"/>
        <signal from="bit1.CARRY-OUT" to="bit2.CARRY-IN"/>
        <signal from="bit2.CARRY-OUT" to="bit3.CARRY-IN"/>

        <!-- collect bits for the zero output -->
        <instance type="or-4" name="zero-or"/>
        <signalvec from="bit0.SUM:bit1.SUM:bit2.SUM:bit3.SUM" to="zero-or.A"/>

        <!-- arrays of input/output values -->
        <inputvec size="4"  name="A"   to="bit0.A:bit1.A:bit2.A:bit3.A"/>
        <inputvec size="4"  name="B"   to="bit0.B:bit1.B:bit2.B:bit3.B"/>
        <outputvec size="4" name="SUM" from="bit0.SUM:bit1.SUM:bit2.SUM:bit3.SUM"/>

        <!-- single bit carry in/out -->
        <input  name="CARRY-IN"  to="bit0.CARRY-IN"/>
        <output name="CARRY-OUT" from="bit3.CARRY-OUT"/>
        <output name="ZERO"      from="zero-or.Y"/>

        <!-- 3 control lines -->
        <input name="INVERT-A"   to="bit0.INVERT-A:bit1.INVERT-A:bit2.INVERT-A:bit3.INVERT-A"/>
        <input name="INVERT-B"   to="bit0.INVERT-B:bit1.INVERT-B:bit2.INVERT-B:bit3.INVERT-B"/>
        <input name="INVERT-SUM" to="bit0.INVERT-SUM:bit1.INVERT-SUM:bit2.INVERT-SUM:bit3.INVERT-SUM"/>

    </module>

    <module name="8-bit-arithmetic-unit">

        <instance type="4-bit-arithmetic-unit" name="lsb"/>
        <instance type="4-bit-arithmetic-unit" name="msb"/>

        <signal from="lsb.CARRY-OUT" to="msb.CARRY-IN"/>

        <gate type="NOR" name="zero-nor"/>

        <!-- data input and output -->
        <inputvec size="8" name="A" to="lsb.A:msb.A"/>
        <inputvec size="8" name="B" to="lsb.B:msb.B"/>
        <outputvec size="8" name="SUM" from="lsb.SUM:msb.SUM"/>

        <!-- carry in and carry out -->
        <input name="CARRY-IN" to="lsb.CARRY-IN"/>
        <output name="CARRY-OUT" from="msb.CARRY-OUT"/>

        <!-- control line inputs -->
        <input name="INVERT-A"   to="lsb.INVERT-A:msb.INVERT-A"/>
        <input name="INVERT-B"   to="lsb.INVERT-B:msb.INVERT-B"/>
        <input name="INVERT-SUM" to="lsb.INVERT-SUM:msb.INVERT-SUM"/>

    </module>

    <module name="registered-8-bit-arithmetic-unit">

        <instance type="8-bit-arithmetic-unit" name="arith"/>
        <instance type="8-bit-register"        name="reg-a"/>
        <instance type="8-bit-register"        name="reg-b"/>
        <instance type="8-bit-register"        name="accum"/>

        <signalvec size="8" from="arith.SUM" to="accum.Din"/>
        <signalvec size="8" from="reg-a.Q" to="arith.A"/>
        <signalvec size="8" from="reg-b.Q" to="arith.B"/>

        <!-- control signals for various registers in arithmetic unit. there are 
            quite a few and there are several more in the logic unit -->
        <input name="Clk"          to="accum.Clk:reg-a.Clk:reg-b.Clk"/>
        <input name="Reset"        to="accum.Reset:reg-a.Reset:reg-b.Reset"/>
        <input name="Enable-Accum" to="accum.Enable"/>
        <input name="Enable-Reg-A" to="reg-a.Enable"/>
        <input name="Enable-Reg-B" to="reg-b.Enable"/>

        <!-- behavioral configuration inputs for arithmetic functionality -->
        <input name="CARRY-IN"   to="arith.CARRY-IN"/>
        <input name="INVERT-A"   to="arith.INVERT-A"/>
        <input name="INVERT-B"   to="arith.INVERT-B"/>
        <input name="INVERT-SUM" to="arith.INVERT-SUM"/>

        <!-- single bit outputs -->
        <output name="Zero" from=""/>

    </module>

</root>
